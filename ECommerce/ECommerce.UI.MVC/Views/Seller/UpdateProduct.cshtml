@model UpdateProductViewModel

@{
	ECommerceService eCommerce = (ECommerceService)ViewData[GlobalViewBagKeys.ECommerceService];
	ProductTypeView productType = eCommerce.GetProductTypeBy(Model.ProductTypeId);
	<h1>@productType.Name</h1>
}
<form asp-action="UpdateProduct" method="post" enctype="multipart/form-data">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>

	<input type="hidden" asp-for="ProductTypeId" />

	<div class="form-group">
		<label asp-for="UpdateModel.Price" class="control-label"></label>
		<input asp-for="UpdateModel.Price" class="form-control" />
		<span asp-validation-for="UpdateModel.Price" class="text-danger"></span>
	</div>

	<table class="table table-striped table-bordered table-hover table-condensed table-sm table-active table-secondary mw-100">
		<thead class="thead-dark">
			<tr>
				<th>Attribute</th>
				<th>Values</th>
			</tr>
		</thead>
		<tbody>
			@{
				short attributeCount = 0;
				if (Model.UpdateModel.Attributes != null)
				{
					foreach (var attribute in Model.UpdateModel.Attributes)
					{
						<tr>
							<td><input name="keys" class="form-control" type="text" value="@attribute.Key" /></td>
							<td>
								<input name="values" type="text" value="@string.Join(',', attribute.Value)" data-role="tagsinput" />
							</td>
						</tr>
						attributeCount++;
					}
				}
				while (attributeCount++ < Model.ProductAttributesNumber)
				{
					<tr>
						<td><input name="keys" class="form-control" type="text" /></td>
						<td>
							<input name="values" type="text" data-role="tagsinput" />
						</td>
					</tr>
				}
			}
		<tbody>
		<tfoot>
			<tr>
				<td colspan="2" class="changeAttributeNumber">
					<div class="input-group">
						<div class="input-group-prepend">
							<span class="input-group-text">Change attribute number here</span>
						</div>
						<input class="changeAttributeNumberValue form-control" asp-for="ProductAttributesNumber" type="number" />
						<input type="hidden" class="changeAttributeNumberUrl" value="@Url.Action("Index", new { productTypeId = Model.ProductTypeId })" />
						<div class="input-group-append">
							<button class="changeAttributeNumberBtn btn btn-primary">Change</button>
						</div>
					</div>
				</td>
			</tr>
		</tfoot>
	</table>

	<!--<div class="form-group">
		<label class="control-label">Product's representative image:</label>
		<input id="representativeImageCheckbox" type="checkbox" asp-for="UpdateRepresentativeImage" />Check if update
		<div class="file-loading">
			<input id="representativeImageFileInput" class="file registerProductFileInput" name="representativeImage" type="file" disabled />
		</div>
	</div>-->

	<div class="form-group">
		<label class="control-label">Product's images:</label>
		<input id="imagesCheckbox" type="checkbox" asp-for="UpdateImages" />Check if update
		<div>
			@foreach (string image in Model.UpdateModel.Images)
			{
			<div style="width:100px; display:inline-block;">
				<img src="@Html.Raw($"{UIConsts.GetProductUrlById(Model.SellerId, Model.ProductTypeId)}/{image}")" style="width:100%;" />
			</div>
			}
		</div>
		<div class="file-loading">
			<input id="imagesFileInput" class="file registerProductFileInput" name="images" type="file" multiple disabled />
		</div>
	</div>

	<input type="submit" value="Update product" class="btn btn-success" />
	<input type="reset" class="btn btn-outline-secondary" value="Reset" />
</form>

<script type="text/javascript">
	//change attribute number on click
	$('.changeAttributeNumberBtn').click(function (event) {
		event.preventDefault();

		$container = $(this).closest('.changeAttributeNumber');

		$value = $container.find('.changeAttributeNumberValue').val();

		$link = $container.find('.changeAttributeNumberUrl').val();

		window.location.replace($link + '&productAttributesNumber=' + $value);
	});

	//upload images
	$('.registerProductFileInput').fileinput({
        allowedFileExtensions: ['jpg', 'png', 'gif', 'jpeg'],
		removeClass: 'btn btn-danger',
		showUpload: false,
		allowedFileTypes: ['image'],
		maxFileSize: '5120',//5Mb
		theme: 'fas',
		browseOnZoneClick: 'true'
	});

	//checkboxes always start unchecked
	/*$('#representativeImageCheckbox').prop('checked', false);
	$('#imagesCheckbox').prop('checked', false);*/

	//disable file input when uncheck check box
	/*$('#representativeImageCheckbox').change(function () {

		var fileInput = $('#representativeImageFileInput');
		if (this.checked) {
			fileInput.fileinput('enable');
		}
		else fileInput.fileinput('disable');
	});*/

	$('#imagesCheckbox').change(function () {

		var fileInput = $('#imagesFileInput');
		if (this.checked) {
			fileInput.fileinput('enable');
		}
		else fileInput.fileinput('disable');
	});
</script>