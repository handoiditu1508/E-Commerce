@model ProductTypeSearchViewModel

@{
//required: category-picker.js
//required: category-picker.css
}

<fieldset class="border rounded pl-3 pr-3 m-3">
	<legend>Find Product Types By:</legend>
	<form action="@Model.Url" method="get">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>

		<div class="form-row">
			@if (Model.ShowSearchString)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.SearchString" class="control-label input-group-text"></label>
					</div>
					<input name="searchString" asp-for="SearchModel.SearchString" class="form-control" />
				</div>
				<span asp-validation-for="SearchModel.SearchString" class="text-danger"></span>
			</div>
			}
			@if (Model.ShowId)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.Id" class="control-label input-group-text"></label>
					</div>
					<input name="id" asp-for="SearchModel.Id" type="number" class="form-control" />
				</div>
				<span asp-validation-for="SearchModel.Id" class="text-danger"></span>
			</div>
			}
		</div>

		<div class="form-row">
			@if (Model.ShowDateModified)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.DateModified" class="control-label input-group-text"></label>
					</div>
					<input name="dateModified" asp-for="SearchModel.DateModified" class="form-control" />
				</div>
				<span asp-validation-for="SearchModel.DateModified" class="text-danger"></span>
			</div>
			}
			@if (Model.ShowStatus)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.Status" class="control-label input-group-text"></label>
					</div>
					<select class="form-control" name="status" enum-type="typeof(ProductTypeStatus)" selected="Model.SearchModel.Status" option-label=""></select>
				</div>
			</div>
			}
		</div>

		<div class="form-row">
			
			@if (Model.ShowProductStatus)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.ProductStatus" class="control-label input-group-text"></label>
					</div>
					<select class="form-control" name="productStatus" enum-type="typeof(ProductStatus)" selected="Model.SearchModel.ProductStatus" option-label=""></select>
				</div>
			</div>
			}
			@if (Model.ShowHasActiveProduct)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.HasActiveProduct" class="control-label input-group-text"></label>
					</div>
					<select selected-bool-value="@Model.SearchModel.HasActiveProduct" option-label="All" true-label="Yes" false-label="No" class="form-control" name="hasActiveProduct"></select>
				</div>
			</div>
			}
		</div>

		@if(Model.ShowCategoryId)
		{
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-prepend">
					<label asp-for="SearchModel.CategoryId" class="control-label input-group-text"></label>
				</div>
				@await Html.PartialAsync("CategoryPicker", new CategoryPickerModel { CurrentCategoryId = Model.SearchModel.CategoryId, InputName = "categoryId" })
			</div>
		</div>
		}

		<div class="form-group">
			<input type="submit" value="Find" class="btn btn-primary" />
		</div>
	</form>
</fieldset>