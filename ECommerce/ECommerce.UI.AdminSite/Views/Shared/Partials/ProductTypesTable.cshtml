@model IEnumerable<ProductTypeView>

@{
//required: submit-on-change.js
//required: product-types-table.css
}

@{ECommerceService eCommerce = (ECommerceService)ViewData[GlobalViewBagKeys.ECommerceService];}

<div class="table-responsive rounded">
	<table class="table table-striped table-bordered table-hover table-condensed table-sm table-secondary table-active">
		<thead class="thead-dark">
			<tr>
				<th></th>
				<th>Name</th>
				<th>Date Modified</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
			@{string formAction = Url.Action("ChangeStatus", "ProductType");}
			@foreach (ProductTypeView productType in Model)
			{
				ProductView product = eCommerce.GetRepresentativeProduct(productType.Id);
				if (product == null)
				{
					product=new ProductView
					{
						ProductTypeName=productType.Name,
						ProductTypeId=productType.Id
					};
				}
				<tr>
					<td>
						@if (product.RepresentativeImage != null)
						{
						<div class="productImageContainerForProductTypeTable">
							<img class="img-fluid rounded" src="@($"{UIConsts.GetProductUrlById(product.SellerId, product.ProductTypeId)}/{product.RepresentativeImage}")" alt="@product.ProductTypeName" />
						</div>
						}
						else
						{
						<div class="productImageContainerForProductTypeTable">
							<img class="img-fluid rounded" src="~/images/sample.png" alt="@product.ProductTypeName" />
						</div>
						}
					</td>
					<td>
						<a asp-action="Edit" asp-controller="ProductType" asp-route-productTypeId="@product.ProductTypeId" class="text-decoration-none">
							<h4>@product.ProductTypeName</h4>
							Id: @product.ProductTypeId
						</a>
						@{
							int categoryId = (await eCommerce.GetProductTypeByAsync(product.ProductTypeId)).CategoryId;
							<small>
								@await Component.InvokeAsync("CategoryBreadCrumb", new { categoryId })
							</small>
						}
					</td>
					<td><input class="form-control" type="date" name="dateModified" readonly value="@productType.DateModified.ToString("yyyy-MM-dd")" /></td>
					<td>
						<form action="@formAction" method="put">
							<input name="productTypeId" type="hidden" value="@productType.Id" />
							<select class="submitOnChange form-control" error="Something went wrong while changing product type status" name="status" enum-type="typeof(ProductTypeStatus)" selected="productType.Status"></select>
						</form>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>