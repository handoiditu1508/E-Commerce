@model ProductSearchViewModel

@{
//required: category-picker.js
//required: category-picker.css
}

<fieldset class="border rounded pl-3 pr-3 m-3">
	<legend>Find Products By:</legend>
	<form action="@Model.Url" method="get">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>

		@if(Model.ShowSearchString)
		{
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-prepend">
					<label asp-for="SearchModel.SearchString" class="control-label input-group-text"></label>
				</div>
				<input name="searchString" asp-for="SearchModel.SearchString" class="form-control" />
			</div>
			<span asp-validation-for="SearchModel.SearchString" class="text-danger"></span>
		</div>
		}

		<div class="form-row">
			@if (Model.ShowSellerId)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.SellerId" class="control-label input-group-text"></label>
					</div>
					<input name="sellerId" type="number" asp-for="SearchModel.SellerId" class="form-control" />
				</div>
				<span asp-validation-for="SearchModel.SellerId" class="text-danger"></span>
			</div>
			}
			@if (Model.ShowProductTypeId)
			{
			<div class="form-group col-md-6">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.ProductTypeId" class="control-label input-group-text"></label>
					</div>
					<input name="productTypeId" type="number" asp-for="SearchModel.ProductTypeId" class="form-control" />
				</div>
				<span asp-validation-for="SearchModel.ProductTypeId" class="text-danger"></span>
			</div>
			}
		</div>

		@if(Model.ShowMinimumQuantity)
		{
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-prepend">
					<label asp-for="SearchModel.MinimumQuantity" class="control-label input-group-text"></label>
				</div>
				<input name="minimumQuantity" type="number" asp-for="SearchModel.MinimumQuantity" class="form-control" />
			</div>
			<span asp-validation-for="SearchModel.MinimumQuantity" class="text-danger"></span>
		</div>
		}

		@if(Model.ShowPrice)
		{
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-prepend">
					<label asp-for="SearchModel.Price" class="control-label input-group-text"></label>
				</div>
				@if(Model.ShowPriceIndication)
				{
				<select name="priceIndication" class="custom-select">
					@if (Model.SearchModel.PriceIndication == null)
					{
						<option value="-1">Lesser than</option>
						<option value="0">Equal to</option>
						<option value="1">Greater than</option>
					}
					else
					{
						if (Model.SearchModel.PriceIndication < 0)
						{
							<option selected value="-1">Lesser than</option>
							<option value="0">Equal to</option>
							<option value="1">Greater than</option>
						}
						else if (Model.SearchModel.PriceIndication > 0)
						{
							<option value="-1">Lesser than</option>
							<option value="0">Equal to</option>
							<option selected value="1">Greater than</option>
						}
						else
						{
							<option value="-1">Lesser than</option>
							<option selected value="0">Equal to</option>
							<option value="1">Greater than</option>
						}
					}
				</select>
				}
				<input name="price" type="number" asp-for="SearchModel.Price" class="form-control" />
			</div>
			<span asp-validation-for="SearchModel.Price" class="text-danger"></span>
		</div>
		}

		<div class="form-row">
			@if(Model.ShowActive)
			{
			<div class="form-group col-md-4">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.Active" class="control-label input-group-text"></label>
					</div>
					<select selected-bool-value="@Model.SearchModel.Active" option-label="All" true-label="Active" false-label="Locked" class="form-control" name="active"></select>
				</div>
			</div>
			}

			@if(Model.ShowStatus)
			{
			<div class="form-group col-md-4">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.Status" class="control-label input-group-text"></label>
					</div>
					<select class="form-control" name="status" enum-type="typeof(ProductStatus)" selected="Model.SearchModel.Status" option-label=""></select>
				</div>
			</div>
			}

			@if(Model.ShowProductTypeStatus)
			{
			<div class="form-group col-md-4">
				<div class="input-group">
					<div class="input-group-prepend">
						<label asp-for="SearchModel.ProductTypeStatus" class="control-label input-group-text"></label>
					</div>
					<select class="form-control" name="status" enum-type="typeof(ProductTypeStatus)" selected="Model.SearchModel.ProductTypeStatus" option-label=""></select>
				</div>
			</div>
			}
		</div>

		@if(Model.ShowCategoryId)
		{
		<div class="form-group">
			<div class="input-group">
				<div class="input-group-prepend">
					<label asp-for="SearchModel.CategoryId" class="control-label input-group-text"></label>
				</div>
				@await Html.PartialAsync("CategoryPicker", new CategoryPickerModel { CurrentCategoryId = Model.SearchModel.CategoryId, InputName = "categoryId" })
			</div>
		</div>
		}

		<div class="form-group">
			<input type="submit" value="Find" class="btn btn-primary" />
		</div>
	</form>
</fieldset>